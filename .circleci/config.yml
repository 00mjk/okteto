version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.6
jobs:
  build-cli:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - restore_cache: 
          keys:
            - v1-pkg-cache
      - run:
          command: env VERSION_STRING=$CIRCLE_TAG make -j 3 build-all
          working_directory: cli

      - persist_to_workspace:
          root: cli
          paths:
            - bin
      - save_cache:
          key: v1-pkg-cache
          paths:
            - ~/.cache/go-build
      - store_artifacts:
          path: cli/bin
          destination: binaries
  publish-cli:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - aws-s3/sync:
          from: ./artifacts/bin
          to: "s3://downloads.okteto.com/cloud/cli"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          arguments: |
            --acl public-read \
            --metadata version=${CIRCLE_TAG}
            --cache-control "max-age=86400"
          overwrite: true
      - aws-s3/sync:
          from: ./artifacts/bin
          to: "s3://downloads.okteto.com/cloud/cli/${CIRCLE_TAG}"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          arguments: |
            --acl public-read \
            --metadata version=${CIRCLE_TAG}
            --cache-control "max-age=86400"
          overwrite: false
            
  build-api:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - restore_cache: 
          keys:
            - v1-pkg-cache
      - run:
          command: make build
          working_directory: api

      - persist_to_workspace:
          root: api
          paths:
            - bin
      - save_cache:
          key: v1-pkg-cache
          paths:
            - ~/.cache/go-build
      - store_artifacts:
          path: api/bin
          destination: binaries
  build-frontend:
    docker:
      - image: circleci/node:10
    environment:
      - GITHUB_CLIENTID: "47867be52b46a2d9d302"
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install --frozen-lockfile
          working_directory: frontend
      - run:
          command: yarn build
          working_directory: frontend
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: frontend
          paths:
            - dist

      - store_artifacts:
          path: frontend/dist
          destination: dist
workflows:
  version: 2
  test:
    jobs:
      - build-api:
          filters:
            tags:
              ignore: /^\d+\.\d+\.\d+$/
      - build-cli:
          filters:
            tags:
              ignore: /^\d+\.\d+\.\d+$/
      - build-frontend:
          filters:
            tags:
              ignore: /^\d+\.\d+\.\d+$/
  release-cli:
    jobs:
      - build-cli:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - publish-cli:
          requires: 
            - build-cli
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
