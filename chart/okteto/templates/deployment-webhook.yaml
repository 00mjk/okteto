{{- if .Values.ingress.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook
  labels:
    app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-webhook"
    helm.sh/chart: {{ include "okteto.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-webhook"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-webhook"
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/webhook.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "okteto.fullname" . }}
      volumes:
        - name: webhook-tls-certs
          secret:
            defaultMode: 420
            secretName: {{ include "okteto.fullname" . }}-webhook
      containers:
        - name: server
          image: "{{ .Values.images.webhook.repository }}:{{ .Values.images.webhook.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          ports:
            - name: https
              containerPort: {{ .Values.services.webhook.port }}
          env:
            - name: OKTETO_BASE_DOMAIN
              value: "{{ .Values.oktetoBaseDomain }}"
            - name: PORT
              value: "{{ .Values.services.webhook.port }}"
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          resources:
{{ toYaml .Values.resources.api | indent 12 }}
{{- end }}